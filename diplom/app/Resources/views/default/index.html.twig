{% extends 'base.html.twig' %}

{% block body_id 'blog_index' %}

{% block main %}
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/highcharts-3d.js"></script>
    <script src="{{ asset('js/jquery-2.2.4.min.js') }}"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">






    <script type="text/javascript" src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <script>
        var outputx = false;
        var outputy = false;
        var outputz = false;
        var outputz1 = false;
        {% if actual is defined and approx is defined %}
         outputx = '{{ actual[0] }}'.split(' ');
         outputy = '{{ actual[1] }}'.split(' ');
         outputz = '{{ actual[2] }}'.split(' ');
         outputz1 = '{{ approx[2] }}'.split(' ');
        {% endif %}
        console.log(outputx);
        console.log(outputy);
        console.log(outputz);
        console.log(outputz1);

        if (outputx && outputy && outputz && outputz1) {
            Plotly.d3.csv('https://raw.githubusercontent.com/plotly/datasets/master/alpha_shape.csv', function(err, rows){



                var data = [{
                    x: outputx,
                    y: outputy,
                    z: outputz,
                    mode: 'markers',
                    type: 'scatter3d',
                    marker: {
                        color: 'rgb(255, 0, 0)',
                        size: 2
                    },
                    name: "real value"
                },{
                    alphahull: 7,
                    opacity: 0.5,
                    type: 'scatter3d',
                    mode: 'markers',
                    marker: {
                        color: 'rgb(150, 150, 100)',
                        size: 6
                    },
                    x: outputx,
                    y: outputy,
                    z: outputz1,
                    name: "approx value"
                }];

                var layout = {

                    autosize: true,
                    height: 600,
                    scene: {
                        aspectratio: {
                            x: 1,
                            y: 1,
                            z: 1
                        },
                        camera: {
                            center: {
                                x: 0,
                                y: 0,
                                z: 0
                            },
                            eye: {
                                x: 1.25,
                                y: 1.25,
                                z: 1.25
                            },
                            up: {
                                x: 0,
                                y: 0,
                                z: 1
                            }
                        },
                        xaxis: {
                            type: 'linear',
                            zeroline: false
                        },
                        yaxis: {
                            type: 'linear',
                            zeroline: false
                        },
                        zaxis: {
                            type: 'linear',
                            zeroline: false
                        }
                    },
                    title: 'Function approximation',
                    width: 1200
                };

                Plotly.newPlot('myDiv', data, layout);

            });
        } else {
            $('#myDiv').html('Select file with input data')
        }

        $(document).on('change', ':file', function() {
            var input = $(this),
                numFiles = input.get(0).files ? input.get(0).files.length : 1,
                label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
            input.trigger('fileselect', [numFiles, label]);
        });
    </script>



    <script>

    </script>
    <html>

    <body>
    <div class="container">
        <div class="row">
            <div class="col-lg-1" >
                <form method="post" action="{{ path('upload_file') }}" enctype="multipart/form-data">
                    <label class="control-label">Select File</label>
                    <input name="file" id="input-1" type="file" class="file">
                    <button type="submit" class="btn btn-primary">Send</button>
                </form>
            </div>

        </div>

    </div>


    <div id="myDiv" style="width:100%;height:100% " ></div>
    </body>
    </html>
{% endblock %}

{% block sidebar %}
    <script type="text/css" >
        .btn-file {
            position: relative;
            overflow: hidden;
        }
        .btn-file input[type=file] {
            position: absolute;
            top: 0;
            right: 0;
            min-width: 100%;
            min-height: 100%;
            font-size: 100px;
            text-align: right;
            filter: alpha(opacity=0);
            opacity: 0;
            outline: none;
            background: white;
            cursor: inherit;
            display: block;
        }
    </script>

{% endblock %}
